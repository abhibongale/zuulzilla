# Playbook to run all ironic-tempest-plugin tests
# Runs on the Nodepool node
- hosts: all
  become: true
  become_user: stack  # Tempest tests usually run as the stack user
  environment:  # Source OpenStack credentials
    # This can be done more robustly by sourcing openrc in a shell task
    # For simplicity in a local dev setup, hardcode if DevStack defaults are known
    # Or ensure openrc is sourced by the shell environment for the command
    # For tox, it often finds the openrc file if in the right directory.
    HOME: "/home/stack"  # tox might need HOME set
  tasks:
    - name: Run all ironic-tempest-plugin tests using tox [2, 3, 4]
      ansible.builtin.command:
        # 'all-plugin' tox environment runs tests from installed plugins
        # regex 'ironic_tempest_plugin.' targets all tests in that plugin
        cmd: "tox -e all-plugin -- {{ tempest_test_regex }}"
        chdir: "{{ devstack_base_dir }}/tempest"
      register: tempest_run_result
      ignore_errors: true  # Capture result even if tests fail

    - name: Display Tempest run STDOUT
      ansible.builtin.debug:
        var: tempest_run_result.stdout_lines
        verbosity: 1  # Show only if -v is used with ansible-playbook

    - name: Display Tempest run STDERR
      ansible.builtin.debug:
        var: tempest_run_result.stderr_lines
        verbosity: 1
      when: tempest_run_result.stderr_lines | length > 0

    - name: Report overall test status
      ansible.builtin.debug:
        msg: >
          Ironic Tempest Plugin tests {{
          'SUCCEEDED' if tempest_run_result.rc == 0 else 'FAILED' }}.
          RC: {{ tempest_run_result.rc }}

    - name: Fail playbook if Tempest tests failed
      ansible.builtin.fail:
        msg: >
          Ironic Tempest Plugin tests failed. Check output above and Tempest logs.
      when: tempest_run_result.rc != 0
