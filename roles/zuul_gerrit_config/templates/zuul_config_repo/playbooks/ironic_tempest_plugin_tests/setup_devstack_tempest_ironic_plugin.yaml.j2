# Playbook to setup DevStack with Ironic and ironic-tempest-plugin
- hosts: all
  become: true  # DevStack setup needs sudo
  vars:
    synced_devstack_path: >
      {{ ansible_user_dir }}/src/{{
        zuul.projects['opendev.org/openstack/devstack'].canonical_name }}
    synced_tempest_path: >
      {{ ansible_user_dir }}/src/{{
        zuul.projects['opendev.org/openstack/tempest'].canonical_name }}
    synced_ironic_tempest_plugin_path: >
      {{ ansible_user_dir }}/src/{{
        zuul.projects[gerrit_connection_name + '/' +
        zuul_project_short_name_itp].canonical_name }}

  tasks:
    - name: Ensure stack user exists
      ansible.builtin.user:
        name: stack
        shell: /bin/bash
        create_home: true
        state: present

    - name: Allow stack user to sudo without password
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: "stack ALL=(ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'
        state: present

    - name: Ensure DevStack base dir exists and is owned by stack
      ansible.builtin.file:
        path: "{{ devstack_base_dir }}"
        state: directory
        owner: stack
        group: stack
        mode: '0755'

    - name: Link DevStack repo into base dir
      ansible.builtin.file:
        src: "{{ synced_devstack_path }}"
        dest: "{{ devstack_base_dir }}/devstack"
        owner: stack
        group: stack
        state: link

    - name: Link Tempest repo into base dir
      ansible.builtin.file:
        src: "{{ synced_tempest_path }}"
        dest: "{{ devstack_base_dir }}/tempest"
        owner: stack
        group: stack
        state: link

    - name: Link ironic-tempest-plugin into base dir
      ansible.builtin.file:
        src: "{{ synced_ironic_tempest_plugin_path }}"
        dest: >
          {{ devstack_base_dir }}/{{ zuul_project_short_name_itp }}
        owner: stack
        group: stack
        state: link

    - name: Template local.conf for DevStack
      ansible.builtin.template:
        src: "templates/local.conf.j2"
        dest: "{{ devstack_base_dir }}/devstack/local.conf"
        owner: stack
        group: stack
        mode: '0644'
      vars:
        admin_password_for_local_conf: "{{ devstack_admin_password }}"
        devstack_branch_for_local_conf: "{{ devstack_default_branch }}"
        ironic_tempest_plugin_local_path_for_devstack: >
          {{ devstack_base_dir }}/{{ zuul_project_short_name_itp }}

    - name: Run stack.sh to deploy DevStack
      ansible.builtin.command:
        cmd: ./stack.sh
        chdir: "{{ devstack_base_dir }}/devstack"
        creates: "{{ devstack_base_dir }}/.stack.sh.complete"
      become_user: stack
      environment:
        HOME: "/home/stack"
      async: 4200
      poll: 60
      register: stack_sh_result

    - name: Mark DevStack as completed
      ansible.builtin.file:
        path: "{{ devstack_base_dir }}/.stack.sh.complete"
        state: touch
        owner: stack
        mode: '0644'
      when: stack_sh_result.rc == 0
      become_user: stack

    - name: Fail if stack.sh failed
      ansible.builtin.fail:
        msg: >
          stack.sh failed. Check logs in {{ devstack_base_dir }}/devstack/logs/
          stack.sh.log and Ansible output.
      when: stack_sh_result.rc != 0

    - name: Verify ironic-tempest-plugin via Tempest
      ansible.builtin.command:
        cmd: tox -e list-plugins
        chdir: "{{ devstack_base_dir }}/tempest"
      become_user: stack
      environment:
        HOME: "/home/stack"
      register: tempest_plugins_list
      changed_when: false

    - name: Assert ironic-tempest-plugin is listed
      ansible.builtin.assert:
        that:
          - "'ironic_tempest_plugin' in tempest_plugins_list.stdout"
        fail_msg: >
          ironic-tempest-plugin not found in Tempest plugins.
        success_msg: >
          ironic-tempest-plugin found in Tempest plugins.
