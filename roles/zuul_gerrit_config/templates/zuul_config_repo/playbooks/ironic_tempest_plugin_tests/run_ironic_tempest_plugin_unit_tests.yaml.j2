# Playbook to run ironic unit tests (placeholder, adapt to actual test cmd)
# Runs on the Nodepool node
- hosts: all
  # Unit tests might not need full sudo, but tox might install dependencies
  become: true
  become_user: root  # Or 'zuul' if it has perms to install tox deps/write to .tox
  environment:
    LC_ALL: C.UTF-8  # Common requirement for tox
    LANG: C.UTF-8
    HOME: "{{ ansible_user_dir }}"  # /home/zuul typically
  tasks:
    - name: Install tox if not present (globally for simplicity)
      ansible.builtin.pip:
        name: tox
        state: present

    - name: Run Ironic unit tests using tox
      ansible.builtin.command:
        # Check ironic's tox.ini for correct env, e.g., py3, pep8
        cmd: "tox -e {{ ironic_unit_tests_tox_env }}"
        chdir: "{{ synced_project_path }}"  # Passed from Zuul job definition
      register: unit_test_result
      ignore_errors: true

    - name: Display Ironic unit test STDOUT
      ansible.builtin.debug:
        var: unit_test_result.stdout_lines
        verbosity: 1

    - name: Display Ironic unit test STDERR
      ansible.builtin.debug:
        var: unit_test_result.stderr_lines
        verbosity: 1
      when: unit_test_result.stderr_lines | length > 0

    - name: Report Ironic unit test status
      ansible.builtin.debug:
        msg: >
          Ironic unit tests {{
          'SUCCEEDED' if unit_test_result.rc == 0 else 'FAILED' }}.
          RC: {{ unit_test_result.rc }}

    - name: Fail playbook if Ironic unit tests failed
      ansible.builtin.fail:
        msg: >
          Ironic unit tests failed. Check output and tox logs in
          {{ synced_project_path }}/.tox/
      when: unit_test_result.rc != 0
