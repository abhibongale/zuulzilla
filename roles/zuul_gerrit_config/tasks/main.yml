---
- name: Wait for Gerrit HTTP to be available
  ansible.builtin.uri:
    url: "{{ gerrit_url }}"
    status_code: 200
  register: gerrit_http_status
  until: gerrit_http_status.status == 200
  retries: 30
  delay: 10
  tags: gerrit_setup

- name: MANUAL STEP: Pause for Gerrit Admin User Setup
  ansible.builtin.pause:
    prompt: |
      Gerrit is up at {{ gerrit_url }}.
      ACTION REQUIRED:
      1. Open {{ gerrit_url }} in your browser.
      2. Click 'Sign In', then 'New Account' to register.
         Use '{{ local_gerrit_admin_user }}' as the username.
      3. Add your SSH public key from '{{ ssh_public_key_path }}'
         to this Gerrit account.
         Key: {{ ssh_public_key_content }}
      4. Grant '{{ local_gerrit_admin_user }}' Administrator privileges
         in Gerrit (Usually: People > List Groups > Administrators >
         Add Member '{{ local_gerrit_admin_user }}').
      Press Enter once completed.
  tags: gerrit_setup

- name: Test SSH connection to Gerrit as admin user
  ansible.builtin.command: >
    ssh -p {{ gerrit_ssh_port }}
    -o StrictHostKeyChecking=no
    -o UserKnownHostsFile=/dev/null
    {{ local_gerrit_admin_user }}@localhost gerrit version
  register: gerrit_ssh_test
  changed_when: false
  retries: 5
  delay: 5
  until: gerrit_ssh_test.rc == 0
  tags: gerrit_setup

- name: Create Gerrit projects
  ansible.builtin.command: >
    ssh -p {{ gerrit_ssh_port }}
    -o StrictHostKeyChecking=no
    -o UserKnownHostsFile=/dev/null
    {{ local_gerrit_admin_user }}@localhost
    gerrit create-project {{ item }} --empty-commit
  loop:
    - "{{ zuul_config_project_name }}"
    - "{{ ironic_tempest_plugin_project_name }}"
    - "{{ ironic_project_name }}"
  register: create_gerrit_project_result
  failed_when: >
    create_gerrit_project_result.rc != 0 and
    'project already exists' not in item.stderr
  changed_when: >
    create_gerrit_project_result.rc == 0 and
    'project already exists' not in item.stderr
  loop_control:
    label: "{{ item }}"
  tags: gerrit_setup

- name: Clone/Init local zuul-config repo
  ansible.builtin.git:
    repo: "{{ gerrit_ssh_url_base }}/{{ zuul_config_project_name }}"
    dest: "{{ zuul_config_local_repo_path }}"
    version: master
    accept_hostkey: true
  tags: zuul_config_content

- name: Template zuul-config files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ zuul_config_local_repo_path }}/{{ item.dest }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { src: "zuul_config_repo/zuul.d/pipelines.yaml.j2",
        dest: "zuul.d/pipelines.yaml" }
    - { src: "zuul_config_repo/zuul.d/projects.yaml.j2",
        dest: "zuul.d/projects.yaml" }
    - { src: "zuul_config_repo/zuul.d/jobs.yaml.j2",
        dest: "zuul.d/jobs.yaml" }
    - { src: "zuul_config_repo/playbooks/base/pre_copy_git_repos.yaml.j2",
        dest: "playbooks/base/pre_copy_git_repos.yaml" }
    - { src: "zuul_config_repo/playbooks/base/post_collect_logs.yaml.j2",
        dest: "playbooks/base/post_collect_logs.yaml" }
    - {
        src: "zuul_config_repo/playbooks/ironic_tempest_plugin_tests/"
             "setup_devstack_tempest_ironic_plugin.yaml.j2",
        dest: "playbooks/ironic_tempest_plugin_tests/"
              "setup_devstack_tempest_ironic_plugin.yaml"
      }
    - {
        src: "zuul_config_repo/playbooks/ironic_tempest_plugin_tests/"
             "run_ironic_tempest_plugin_all_tests.yaml.j2",
        dest: "playbooks/ironic_tempest_plugin_tests/"
              "run_ironic_tempest_plugin_all_tests.yaml"
      }
    - {
        src: "zuul_config_repo/playbooks/ironic_tempest_plugin_tests/"
             "cleanup_devstack.yaml.j2",
        dest: "playbooks/ironic_tempest_plugin_tests/"
              "cleanup_devstack.yaml"
      }
    - {
        src: "zuul_config_repo/playbooks/ironic_tempest_plugin_tests/"
             "templates/local.conf.j2",
        dest: "playbooks/ironic_tempest_plugin_tests/"
              "templates/local.conf.j2"
      }
    - {
        src: "zuul_config_repo/playbooks/ironic_unit_tests/"
             "run_ironic_unit_tests.yaml.j2",
        dest: "playbooks/ironic_unit_tests/"
              "run_ironic_unit_tests.yaml"
      }
    - {
        src: "gitreview.template.j2",
        dest: ".gitreview",
        vars: { project_name_for_gitreview:
                  "{{ zuul_config_project_name }}" }
      }
  tags: zuul_config_content
  notify: Commit and Push zuul-config

- name: Copy local ironic-tempest-plugin to managed path
  ansible.builtin.synchronize:
    src: "{{ local_ironic_tempest_plugin_path }}/"
    dest: "{{ managed_ironic_tempest_plugin_repo_path }}"
    mode: push
    delete: true
  tags: itp_config

- name: Initialize git and template.gitreview for ironic-tempest-plugin
  ansible.builtin.include_tasks: manage_local_project_repo.yml
  vars:
    project_managed_path: "{{ managed_ironic_tempest_plugin_repo_path }}"
    project_gerrit_name: "{{ ironic_tempest_plugin_project_name }}"
  tags: itp_config

- name: Copy local ironic project to managed path
  ansible.builtin.synchronize:
    src: "{{ local_ironic_project_path }}/"
    dest: "{{ managed_ironic_project_repo_path }}"
    mode: push
    delete: true
  tags: ironic_project_config

- name: Initialize git and template.gitreview for ironic project
  ansible.builtin.include_tasks: manage_local_project_repo.yml
  vars:
    project_managed_path: "{{ managed_ironic_project_repo_path }}"
    project_gerrit_name: "{{ ironic_project_name }}"
  tags: ironic_project_config

- name: Flush handlers to commit and push all projects
  ansible.builtin.meta: flush_handlers
  tags:
    - gerrit_setup
    - zuul_config_content
    - itp_config
    - ironic_project_config

- name: MANUAL STEP: Pause for Zuul Config Approval
  ansible.builtin.pause:
    prompt: |
      The '{{ zuul_config_project_name }}' project has been pushed.
      ACTION REQUIRED:
      1. Visit {{ gerrit_url }} and find the change for
         '{{ zuul_config_project_name }}'.
      2. Review and Submit the change:
         Code-Review+2, Verified+2, Workflow+1, then Submit.
      3. Zuul will reconfigure. Check Zuul at http://localhost:9000.
      '{{ ironic_tempest_plugin_project_name }}' and
      '{{ ironic_project_name }}' have also been pushed.
      You can now make changes and use 'git review' locally.
      Press Enter to continue.
  tags: gerrit_setup

handlers:
  - name: Commit and Push zuul-config
    listen: Commit and Push zuul-config
    ansible.builtin.include_tasks: commit_and_push_gerrit_project.yml
    vars:
      repo_local_path: "{{ zuul_config_local_repo_path }}"
      gerrit_project_name: "{{ zuul_config_project_name }}"
      commit_message: "Initial Zuul configuration by Ansible"
      push_to_review: true

  - name: Commit and Push ironic-tempest-plugin
    listen: Commit and Push ironic-tempest-plugin
    ansible.builtin.include_tasks: commit_and_push_gerrit_project.yml
    vars:
      repo_local_path: "{{ managed_ironic_tempest_plugin_repo_path }}"
      gerrit_project_name: "{{ ironic_tempest_plugin_project_name }}"
      commit_message: "Initial import of ironic-tempest-plugin by Ansible"
      push_to_review: false

  - name: Commit and Push ironic project
    listen: Commit and Push ironic project
    ansible.builtin.include_tasks: commit_and_push_gerrit_project.yml
    vars:
      repo_local_path: "{{ managed_ironic_project_repo_path }}"
      gerrit_project_name: "{{ ironic_project_name }}"
      commit_message: "Initial import of ironic project by Ansible"
      push_to_review: false
